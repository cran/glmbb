
R version 3.0.0 (2013-04-03) -- "Masked Marvel"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
>  library(glmbb)
>  data(crabs)
>  options(width = 132)
> 
>  gout <- glmbb(satell ~ color * spine * width * weight,
+      data = crabs, criterion = "BIC", graphical = TRUE)
Warning message:
glm.fit: fitted rates numerically 0 occurred 
>  sout <- summary(gout)
>  sout

Results of search for graphical models with lowest BIC.
Search was for all models with BIC no larger than min(BIC) + 10
These are shown below.

  criterion  weight    formula                      
  921.2      0.902698  satell ~ width*weight        
  926.5      0.064747  satell ~ weight              
  929.5      0.014021  satell ~ color + width*weight
  930.1      0.010556  satell ~ spine + width*weight
  930.7      0.007978  satell ~ width + weight      

>  
>  # is this correct?
> 
>  gout.full <- glmbb(satell ~ color * spine * width * weight,
+      data = crabs, criterion = "BIC", cutoff = Inf)
Warning messages:
1: glm.fit: fitted rates numerically 0 occurred 
2: glm.fit: fitted rates numerically 0 occurred 
3: glm.fit: fitted rates numerically 0 occurred 
4: glm.fit: fitted rates numerically 0 occurred 
5: glm.fit: fitted rates numerically 0 occurred 
> 
>  e <- gout.full$envir
>  fits <- ls(envir = e, pattern = "^sha1")
>  criteria <- Map(function(x) get(x, envir = e)$criterion, fits)
>  formulae <- Map(function(x) get(x, envir = e)$formula, fits)
>  names(criteria) <- NULL
>  names(formulae) <- NULL
>  criteria <- unlist(criteria)
>  isgraphical <- sapply(formulae, isGraphical)
>  formulae <- sapply(formulae, tidy.formula.hierarchical)
> 
>  criteria <- criteria[isgraphical]
>  formulae <- formulae[isgraphical]
>  inies <- criteria <= min(criteria) + gout$cutoff
>  criteria <- criteria[inies]
>  formulae <- formulae[inies]
>  formulae <- formulae[order(criteria)]
>  criteria <- criteria[order(criteria)]
>  w <- criteria - min(criteria)
>  w <- exp(- w / 2)
>  w <- w / sum(w)
>  all.equal(criteria, sout$results$criterion)
[1] TRUE
>  all.equal(formulae, sout$results$formula)
[1] TRUE
>  all.equal(w, sout$results$weight)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  7.816   0.124   7.944 
